/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-angular:src/main/java/domain/Entity.java.e.vm
 */
package com.apside.gismo.domain;

import static javax.persistence.EnumType.STRING;

import java.io.Serializable;
import java.util.logging.Logger;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Enumerated;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.Digits;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.hibernate.validator.constraints.NotEmpty;

import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;

@Entity
@Table(name = "TASK_TYPE")
public class TaskType implements Identifiable<Integer>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = Logger.getLogger(TaskType.class.getName());

    // Raw attributes
    private Integer id;
    private String name;
    private TaskFormat type;
    private Integer projectId;
    private Integer defaultTaskId;

    @Override
    public String entityClassName() {
        return TaskType.class.getSimpleName();
    }

    // -- [id] ------------------------

    @Override
    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "ID", precision = 10)
    @Id
    public Integer getId() {
        return id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    public TaskType id(Integer id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    public boolean isIdSet() {
        return id != null;
    }
    // -- [name] ------------------------

    @NotEmpty
    @Size(max = 255)
    @Column(name = "NAME", nullable = false)
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public TaskType name(String name) {
        setName(name);
        return this;
    }
    // -- [type] ------------------------

    @NotNull
    @Column(name = "\"TYPE\"", nullable = false, length = 20)
    @Enumerated(STRING)
    public TaskFormat getType() {
        return type;
    }

    public void setType(TaskFormat type) {
        this.type = type;
    }

    public TaskType type(TaskFormat type) {
        setType(type);
        return this;
    }
    // -- [projectId] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "PROJECT_ID", nullable = false, precision = 10)
    public Integer getProjectId() {
        return projectId;
    }

    public void setProjectId(Integer projectId) {
        this.projectId = projectId;
    }

    public TaskType projectId(Integer projectId) {
        setProjectId(projectId);
        return this;
    }
    // -- [defaultTaskId] ------------------------

    @Digits(integer = 10, fraction = 0)
    @Column(name = "DEFAULT_TASK_ID", precision = 10)
    public Integer getDefaultTaskId() {
        return defaultTaskId;
    }

    public void setDefaultTaskId(Integer defaultTaskId) {
        this.defaultTaskId = defaultTaskId;
    }

    public TaskType defaultTaskId(Integer defaultTaskId) {
        setDefaultTaskId(defaultTaskId);
        return this;
    }

    /**
     * Apply the default values.
     */
    public TaskType withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof TaskType && hashCode() == other.hashCode());
    }

    private IdentifiableHashBuilder identifiableHashBuilder = new IdentifiableHashBuilder();

    @Override
    public int hashCode() {
        return identifiableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this TaskType instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this) //
                .add("id", getId()) //
                .add("name", getName()) //
                .add("type", getType()) //
                .add("projectId", getProjectId()) //
                .add("defaultTaskId", getDefaultTaskId()) //
                .toString();
    }
}