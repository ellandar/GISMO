/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-angular:src/main/java/domain/Entity.java.e.vm
 */
package com.apside.gismo.domain;

import static javax.persistence.EnumType.STRING;

import java.io.Serializable;
import java.util.logging.Logger;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Enumerated;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.Digits;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.hibernate.validator.constraints.NotEmpty;

import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;

@Entity
@Table(name = "\"TASK\"")
public class Task implements Identifiable<Integer>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = Logger.getLogger(Task.class.getName());

    // Raw attributes
    private Integer id;
    private String externalId;
    private String name;
    private Integer taskTypeId;
    private TaskLevel level;
    private Integer projectId;
    private Integer versionId;
    private Integer subProjectId;
    private Integer subVersionId;
    private TaskStatus state;
    private Integer consumedtime;
    private Integer previewtime;
    private Integer remaintime;
    private Integer isguarantee;

    @Override
    public String entityClassName() {
        return Task.class.getSimpleName();
    }

    // -- [id] ------------------------

    @Override
    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "ID", precision = 10)
    @Id
    public Integer getId() {
        return id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    public Task id(Integer id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    public boolean isIdSet() {
        return id != null;
    }
    // -- [externalId] ------------------------

    /**
     * JIRA id
     */
    @NotEmpty
    @Size(max = 255)
    @Column(name = "EXTERNAL_ID", nullable = false)
    public String getExternalId() {
        return externalId;
    }

    public void setExternalId(String externalId) {
        this.externalId = externalId;
    }

    public Task externalId(String externalId) {
        setExternalId(externalId);
        return this;
    }
    // -- [name] ------------------------

    @NotEmpty
    @Size(max = 255)
    @Column(name = "NAME", nullable = false)
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Task name(String name) {
        setName(name);
        return this;
    }
    // -- [taskTypeId] ------------------------

    @Digits(integer = 10, fraction = 0)
    @Column(name = "TASK_TYPE_ID", precision = 10)
    public Integer getTaskTypeId() {
        return taskTypeId;
    }

    public void setTaskTypeId(Integer taskTypeId) {
        this.taskTypeId = taskTypeId;
    }

    public Task taskTypeId(Integer taskTypeId) {
        setTaskTypeId(taskTypeId);
        return this;
    }
    // -- [level] ------------------------

    @Column(name = "\"LEVEL\"", length = 20)
    @Enumerated(STRING)
    public TaskLevel getLevel() {
        return level;
    }

    public void setLevel(TaskLevel level) {
        this.level = level;
    }

    public Task level(TaskLevel level) {
        setLevel(level);
        return this;
    }
    // -- [projectId] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "PROJECT_ID", nullable = false, precision = 10)
    public Integer getProjectId() {
        return projectId;
    }

    public void setProjectId(Integer projectId) {
        this.projectId = projectId;
    }

    public Task projectId(Integer projectId) {
        setProjectId(projectId);
        return this;
    }
    // -- [versionId] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "VERSION_ID", nullable = false, precision = 10)
    public Integer getVersionId() {
        return versionId;
    }

    public void setVersionId(Integer versionId) {
        this.versionId = versionId;
    }

    public Task versionId(Integer versionId) {
        setVersionId(versionId);
        return this;
    }
    // -- [subProjectId] ------------------------

    @Digits(integer = 10, fraction = 0)
    @Column(name = "SUB_PROJECT_ID", precision = 10)
    public Integer getSubProjectId() {
        return subProjectId;
    }

    public void setSubProjectId(Integer subProjectId) {
        this.subProjectId = subProjectId;
    }

    public Task subProjectId(Integer subProjectId) {
        setSubProjectId(subProjectId);
        return this;
    }
    // -- [subVersionId] ------------------------

    @Digits(integer = 10, fraction = 0)
    @Column(name = "SUB_VERSION_ID", precision = 10)
    public Integer getSubVersionId() {
        return subVersionId;
    }

    public void setSubVersionId(Integer subVersionId) {
        this.subVersionId = subVersionId;
    }

    public Task subVersionId(Integer subVersionId) {
        setSubVersionId(subVersionId);
        return this;
    }
    // -- [state] ------------------------

    @NotNull
    @Column(name = "\"STATE\"", nullable = false, length = 20)
    @Enumerated(STRING)
    public TaskStatus getState() {
        return state;
    }

    public void setState(TaskStatus state) {
        this.state = state;
    }

    public Task state(TaskStatus state) {
        setState(state);
        return this;
    }
    // -- [consumedtime] ------------------------

    @Digits(integer = 10, fraction = 0)
    @Column(name = "CONSUMEDTIME", precision = 10)
    public Integer getConsumedtime() {
        return consumedtime;
    }

    public void setConsumedtime(Integer consumedtime) {
        this.consumedtime = consumedtime;
    }

    public Task consumedtime(Integer consumedtime) {
        setConsumedtime(consumedtime);
        return this;
    }
    // -- [previewtime] ------------------------

    @Digits(integer = 10, fraction = 0)
    @Column(name = "PREVIEWTIME", precision = 10)
    public Integer getPreviewtime() {
        return previewtime;
    }

    public void setPreviewtime(Integer previewtime) {
        this.previewtime = previewtime;
    }

    public Task previewtime(Integer previewtime) {
        setPreviewtime(previewtime);
        return this;
    }
    // -- [remaintime] ------------------------

    @Digits(integer = 10, fraction = 0)
    @Column(name = "REMAINTIME", precision = 10)
    public Integer getRemaintime() {
        return remaintime;
    }

    public void setRemaintime(Integer remaintime) {
        this.remaintime = remaintime;
    }

    public Task remaintime(Integer remaintime) {
        setRemaintime(remaintime);
        return this;
    }
    // -- [isguarantee] ------------------------

    @Digits(integer = 3, fraction = 0)
    @NotNull
    @Column(name = "ISGUARANTEE", nullable = false, precision = 3)
    public Integer getIsguarantee() {
        return isguarantee;
    }

    public void setIsguarantee(Integer isguarantee) {
        this.isguarantee = isguarantee;
    }

    public Task isguarantee(Integer isguarantee) {
        setIsguarantee(isguarantee);
        return this;
    }

    /**
     * Apply the default values.
     */
    public Task withDefaults() {
        setState(TaskStatus.OPEN);
        setIsguarantee(0);
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof Task && hashCode() == other.hashCode());
    }

    private IdentifiableHashBuilder identifiableHashBuilder = new IdentifiableHashBuilder();

    @Override
    public int hashCode() {
        return identifiableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this Task instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this) //
                .add("id", getId()) //
                .add("externalId", getExternalId()) //
                .add("name", getName()) //
                .add("taskTypeId", getTaskTypeId()) //
                .add("level", getLevel()) //
                .add("projectId", getProjectId()) //
                .add("versionId", getVersionId()) //
                .add("subProjectId", getSubProjectId()) //
                .add("subVersionId", getSubVersionId()) //
                .add("state", getState()) //
                .add("consumedtime", getConsumedtime()) //
                .add("previewtime", getPreviewtime()) //
                .add("remaintime", getRemaintime()) //
                .add("isguarantee", getIsguarantee()) //
                .toString();
    }
}