/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-angular:src/main/java/domain/Entity.java.e.vm
 */
package com.apside.gismo.domain;

import java.io.Serializable;
import java.util.logging.Logger;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.Digits;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.hibernate.validator.constraints.NotEmpty;

import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;

@Entity
@Table(name = "CAPITAL_SUBTYPE")
public class CapitalSubtype implements Identifiable<Integer>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = Logger.getLogger(CapitalSubtype.class.getName());

    // Raw attributes
    private Integer id;
    private String capitalsubtype2;
    private String capitalitem;
    private Integer projectId;
    private Integer tasktypeid;

    @Override
    public String entityClassName() {
        return CapitalSubtype.class.getSimpleName();
    }

    // -- [id] ------------------------

    @Override
    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "ID", precision = 10)
    @Id
    public Integer getId() {
        return id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    public CapitalSubtype id(Integer id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    public boolean isIdSet() {
        return id != null;
    }
    // -- [capitalsubtype2] ------------------------

    @NotEmpty
    @Size(max = 255)
    @Column(name = "CAPITALSUBTYPE", nullable = false)
    public String getCapitalsubtype2() {
        return capitalsubtype2;
    }

    public void setCapitalsubtype2(String capitalsubtype2) {
        this.capitalsubtype2 = capitalsubtype2;
    }

    public CapitalSubtype capitalsubtype2(String capitalsubtype2) {
        setCapitalsubtype2(capitalsubtype2);
        return this;
    }
    // -- [capitalitem] ------------------------

    @Size(max = 255)
    @Column(name = "CAPITALITEM")
    public String getCapitalitem() {
        return capitalitem;
    }

    public void setCapitalitem(String capitalitem) {
        this.capitalitem = capitalitem;
    }

    public CapitalSubtype capitalitem(String capitalitem) {
        setCapitalitem(capitalitem);
        return this;
    }
    // -- [projectId] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "PROJECT_ID", nullable = false, precision = 10)
    public Integer getProjectId() {
        return projectId;
    }

    public void setProjectId(Integer projectId) {
        this.projectId = projectId;
    }

    public CapitalSubtype projectId(Integer projectId) {
        setProjectId(projectId);
        return this;
    }
    // -- [tasktypeid] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "TASKTYPEID", nullable = false, precision = 10)
    public Integer getTasktypeid() {
        return tasktypeid;
    }

    public void setTasktypeid(Integer tasktypeid) {
        this.tasktypeid = tasktypeid;
    }

    public CapitalSubtype tasktypeid(Integer tasktypeid) {
        setTasktypeid(tasktypeid);
        return this;
    }

    /**
     * Apply the default values.
     */
    public CapitalSubtype withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof CapitalSubtype && hashCode() == other.hashCode());
    }

    private IdentifiableHashBuilder identifiableHashBuilder = new IdentifiableHashBuilder();

    @Override
    public int hashCode() {
        return identifiableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this CapitalSubtype instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this) //
                .add("id", getId()) //
                .add("capitalsubtype2", getCapitalsubtype2()) //
                .add("capitalitem", getCapitalitem()) //
                .add("projectId", getProjectId()) //
                .add("tasktypeid", getTasktypeid()) //
                .toString();
    }
}